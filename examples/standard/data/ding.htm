<!doctype html>
<html lang="en">

<head>
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />

  <title>Board</title>

  <link rel="icon" type="image/png" href="/favicon48.png" sizes="48x48">
  <meta name="application-name" content="Ding" />
  <meta name="msapplication-config" content="/browserconfig.xml" />
  <meta name="msapplication-TileColor" content="#2b5797" />
  <meta name="msapplication-TileImage" content="/favicon144.png" />
  <link rel="apple-touch-icon" sizes="180x180" href="/favicon180.png" />
  <meta name="mobile-web-app-capable" content="yes" />
  <link rel="manifest" href="/manifest.json" />
  <meta name="theme-color" content="#ffffff" />
  <link rel="icon" type="image/png" href="/favicon48.png" sizes="48x48">

  <link Content-Type="text/css" href="/iotstyle.css" rel="stylesheet" />

  <style>
    img,
    #panel {
      user-select: none;
      -ms-user-select: none;
    }

    .hueband {
      background: linear-gradient(to right, #ff0000 0%, #ffff00 17%, #00ff00 33%, #00ffff 50%, #0000ff 67%, #ff00ff 83%, #ff0000 100%);
    }
  </style>
  <script src="/micro.js"></script>
</head>

<body>
  <div class="container-fluid">
    <div id="panel" class="row wrap"></div>

    <div id="u-templates" style="display:none">
      <div class="col card" u-control="generic" u-is="generic" microID="${id}">
        <div class="block">
          <h4>${id} - <span u-text="description"></span></h4>
          <div class="form-group"><label>Value:</label><span u-text="value"></span></div>
        </div>
      </div>

      <div class="col-6" u-control="device" u-is="generic" microID="${id}">
        <div class="u-header">
          <a href="/" title="Start-Page"><img class="icon" src="/favicon.svg" /></a>
          <h1><span u-text="name"> </span></h1>
        </div>

        <h4><span u-text="description"></span> (<span u-text="room"></span>)</h4>
      </div>

      <div class="col card" u-control="switch" id="${id}" u-is="switch" microID="${id}">
        <div class="block">
          <h4>${id} - <span u-text="description"></span></h4>
          <span class="u-bool ux-value" u-active="value"></span>
          <div class="u-slider u-switch" u-active="value">
            <label value="0">off</label>
            <div class="box">
              <div class="handle"></div>
            </div>
            <label value="1">on</label>
          </div>
        </div>
      </div>

      <div class="col card" u-control="schedule" microID="${id}" u-is="generic">
        <div class="block">
          <h4>${id} - <span u-text="description"></span></h4>
          <span class="u-bool ux-value" u-active="value"></span>
          <div class="form-group">
            <label>Start:</label>
            <span u-text="ontime"></span>
          </div>
          <div class="form-group">
            <label>End:</label>
            <span u-text="offtime"></span>
          </div>
        </div>
      </div>

      <div class="col card" u-control="timer" microID="${id}" u-is="timer">
        <div class="block">
          <h4>${id} - <span u-text="description"></span></h4>
          <span class="u-bool ux-value" u-active="value"></span>
          <label>wait:</label><span u-text="waittime">.</span> <label>pulse:</label><span u-text="pulsetime">.</span>
        </div>
        <div class="block">
          <div class="u-bar">
            <span class="pulse"></span>
            <span class="current"></span>
          </div>
        </div>
        <div class="block">
          <button u-action="start" value="1">Start</button>
          <button u-action="next" value="1">Next</button>
          <button u-action="stop" value="1">Stop</button>
        </div>
      </div>

      <div class="col card" u-control="value" u-is="slider" microID="${id}">
        <div class="block">
          <h4>${id} - <span u-text="description"></span></h4>
          <div class="form-group"><label>value:</label><span u-text="value"></span></div>
          <div class="u-slider">
            <label class="down"><img src="/i/minus.svg"></label>
            <div class="box" style="width:240px">
              <div class="handle"></div>
            </div>
            <label class="up"><img src="/i/plus.svg"></label>
          </div>
        </div>
      </div>

      <div class="col card" u-control="and" id="${id}" u-is="generic" microID="${id}">
        <div class="block">
          <h4>${id} - <span u-text="description"></span></h4>
          <span class="u-bool ux-value" u-active="value"></span>
          <div class="form-group"><label>value:</label><span u-text="value"></span></div>
        </div>
      </div>

      <div class="col card" u-control="neo" id="${id}" u-is="neo" microID="${id}">
        <div class="block">
          <h4>${id} - <span u-text="description"></span></h4>
          <div class="form-group"><label>value:</label><span u-text="value"></span><span class="color"
              style="width:6rem;"></span></div>
          <div class="hueband" style="height:1.4rem;width:100%;margin-bottom: 0.4rem;"></div>
          <button u-action="mode" value="flow">flow</button>
          <button u-action="mode" value="wheel">wheel</button>
          <button u-action="mode" value="pulse">pulse</button>
        </div>
      </div>

      <div class="col card" u-control="webbutton" id="${id}" u-is="generic" microID="${id}">
        <div class="block">
          <button u-action="${onclick}" u-text="description"></button>
        </div>
      </div>
    </div>

    <hr />
    <a href="/microide.htm">IDE</a>
  </div>

  <div id="modal" class="hidden">
    <div id="modalBack" onclick="modal.close()"></div>
    <div id="modalContainer" style="width:260px;height:260px">Hello, this is modal</div>
  </div>

  <script>
    var panelObj = document.getElementById('panel');
    var updateTimer;

    function createElement(path, key, value) {
      if (path) {
        path = path.toLowerCase();
        var hElem = document.querySelector("[microID='" + path + "']");
        if (!hElem) {
          var t = path.split('/')[1];
          var p = {
            id: path,
            type: t
          };

          var e = micro.insertTemplate(panelObj, t, p);
          // if (!e) { micro.insertTemplate(panelObj, 'generic', p); }
        } // if
      } // if
    } // createElement()
    hub.subscribe('/*/*', createElement);

    hub.subscribe('/device/*?name', function (path, key, value) {
      document.title = value;
      document.querySelector("meta[name=application-name]").content = value;
    });

    function updateAsap(ev) {
      if (updateTimer)
        window.clearTimeout(updateTimer);
      updateTimer = null;
      updateTimer = window.setTimeout(updateState, 20);
    }

    function updateState(ev) {
      if (updateTimer)
        window.clearTimeout(updateTimer);
      updateTimer = null;

      fetch('/$board')
        .then(function (result) {
          return result.json();
        })
        .then(function (json) {
          hub.publishObj(json);
        })
        .then(function (json) {
          updateTimer = window.setTimeout(updateState, 4000);
        });
    } // updateState()

    function init() {
      // element definitions -> env.json -> config.json
      fetch('/env.json')
        .then(function (result) {
          return result.json();
        })
        .then(function (json) {
          hub.publishObj(json);

          return fetch('/config.json');
        })
        .then(function (result) {
          return result.json();
        })
        .then(function (json) {
          hub.publishObj(json);
        })
        .then(function () {
          updateState();
        });
    } // init()

    window.addEventListener('load', init);
  </script>
</body>

</html>